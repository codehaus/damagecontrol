<script type="text/javascript">
<!--
cvs_port   = new RegExp("^:([^:]*):(.*)@([^:]*):([0-9]*):([a-zA-Z]?.*)")
cvs_noport = new RegExp("^:([^:]*):(.*)@([^:]*):([a-zA-Z]?.*)")
cvs_local  = new RegExp("^:(local):(.*)")

// distributes fields from the value of cvsroot. called on load and on edit of cvsroot field
function cvs_init() {
	cvsroot = document.getElementById('cvsroot').value

	protocolIndex = 1
	userIndex     = -1
	serverIndex   = -1
	portIndex     = -1
	pathIndex     = -1
	if(tokens = cvs_port.exec(cvsroot)) {
		userIndex = 2
		serverIndex = 3
		portIndex = 4
		pathIndex = 5
	} else if(tokens = cvs_noport.exec(cvsroot)) {
		userIndex = 2
		serverIndex = 3
		pathIndex = 4
	} else if(tokens = cvs_local.exec(cvsroot)) {
		pathIndex = 2
	}
	if(pathIndex != -1) {
		document.getElementById('cvsprotocol').selectedIndex = findIndex(tokens[protocolIndex])

		if(userIndex != -1) {
			document.getElementById('cvsuser').value = tokens[userIndex]
			document.getElementById('cvsserver').value = tokens[serverIndex]
		} else {
			document.getElementById('cvsuser').value = ""
			document.getElementById('cvsserver').value = ""
		}

		if(portIndex != -1) {
			document.getElementById('cvsport').value = tokens[portIndex]
		} else {
			document.getElementById('cvsport').value = ""
		}

		document.getElementById('cvsrepodir').value = tokens[pathIndex]
	} else {
		// didn't match
		clearCvsFields()
		// TODO: make CVSROOT yellow and blank all the others. Also disable submit.
	}
	enableOrDisableCvsFields()
}

function clearCvsFields() {
	document.getElementById('cvsprotocol').selectedIndex = 0
	document.getElementById('cvsuser').value = ""
	document.getElementById('cvsserver').value = ""
	document.getElementById('cvsport').value = ""
	document.getElementById('cvsrepodir').value = ""
}

function findIndex(protocol) {
	arr = new Array("ext", "pserver", "local")
	for (var i=0; i < arr.length; i++) {
		if(arr[i] == protocol) {
			return i + 1
		}
	}
	return 0
}

function updateCvsRootField() {
	userAtServerAtPort = ""
	if(document.getElementById('cvsprotocol').value != "local") {
		// it's proper client/server
		port = document.getElementById('cvsport').value != "" ? document.getElementById('cvsport').value + ":" : ""
		userAtServerAtPort =
			document.getElementById('cvsuser').value + "@" +
			document.getElementById('cvsserver').value + ":" +
			port
	}
	document.getElementById('cvsroot').value = ":" +
		document.getElementById('cvsprotocol').value + ":" +
		userAtServerAtPort +
		document.getElementById('cvsrepodir').value
	enableOrDisableCvsFields()
}

function enableOrDisableCvsFields() {
	if(document.getElementById('cvsprotocol').value == "local") {
		document.getElementById('cvsuser').disabled = true
		document.getElementById('cvspassword').disabled = true
		document.getElementById('cvsserver').disabled = true
		document.getElementById('cvsport').disabled = true
	} else if(document.getElementById('cvsprotocol').value == "ext") {
		document.getElementById('cvsuser').disabled = false
		document.getElementById('cvspassword').disabled = true
		document.getElementById('cvsserver').disabled = false
		document.getElementById('cvsport').disabled = false
	} else if(document.getElementById('cvsprotocol').value == "pserver") {
		document.getElementById('cvsuser').disabled = false
		document.getElementById('cvspassword').disabled = false
		document.getElementById('cvsserver').disabled = false
		document.getElementById('cvsport').disabled = false
	}
}

var cvs_protocol_tip = "<div class='tp1'>If you specify :local: DamageControl can create the repository for you after you save (unless the repository already exists).</div>";
// not displayed yet - not appropriate for rscm...
var cvs_mod_tip  = "<div class='tp1'>Note that you can't use trigged build if you are using DC to build multiple branches for the same project, use polling instead.</div>";
-->
</script>

<table width="100%">
  <tr>
    <td width="25%" class="setting-name">CVSROOT</td>
    <td>&nbsp;</td>
    <td width="75%"><%= tag("input", :name => "scm[RSCM::Cvs][root]", :value => object.root, :onkeyup => "cvs_init()", :id => "cvsroot") %></td>
  </tr>
<% if(true) %>
  <tr>
    <td>Protocol</td>
    <td>&nbsp;</td>
    <td>
      <select class="setting-input" id="cvsprotocol" onchange="updateCvsRootField()">
        <option value=""></option>
        <option value="ext" selected="selected">Secure shell (:ext:)</option>
        <option value="pserver">Password server (:pserver:)</option>
        <option value="local">Locally mounted folder (:local:)</option>
      </select>
    </td>
  </tr>
  <tr>
    <td>User name</td>
    <td>&nbsp;</td>
    <td width="75%"><%= tag("input", :onkeyup => "updateCvsRootField()", :onblur => "updateCvsRootField()", :id => "cvsuser") %></td>
  </tr>
  <tr>
    <td>Password</td>
    <td>&nbsp;</td>
    <td width="75%"><%= tag("input", :type => "password", :name => "scm[RSCM::Cvs][password]", :value => object.password, :onkeyup => "updateCvsRootField()", :onblur => "updateCvsRootField()", :id => "cvspassword") %></td>
  </tr>
  <tr>
    <td>Server</td>
    <td>&nbsp;</td>
    <td width="75%"><%= tag("input", :onkeyup => "updateCvsRootField()", :onblur => "updateCvsRootField()", :id => "cvsserver") %></td>
  </tr>
  <tr>
    <td>Port</td>
    <td>&nbsp;</td>
    <td width="75%"><%= tag("input", :onkeyup => "updateCvsRootField()", :onblur => "updateCvsRootField()", :id => "cvsport") %></td>
  </tr>
  <tr>
    <td>Repository directory</td>
    <td>&nbsp;</td>
    <td width="75%"><%= tag("input", :onKeyUp => "updateCvsRootField()", :onblur => "updateCvsRootField()", :id => "cvsrepodir") %></td>
  </tr>
<% end %>
  <tr>
    <td>Module</td>
    <td>&nbsp;</td>
    <td width="75%"><%= tag("input", :name => "scm[RSCM::Cvs][mod]", :value => object.mod, :id => "cvsmodule") %></td>
  </tr>
  <tr>
    <td>Branch</td>
    <td>&nbsp;</td>
    <td width="75%"><%= tag("input", :name => "scm[RSCM::Cvs][branch]", :value => object.branch, :id => "cvsbranch") %></td>
  </tr>
</table>
