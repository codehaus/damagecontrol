<html>
<head>
<title><%= project_name %> Configuration</title>
<link type="text/css" rel="stylesheet" href="css/style.css">
</head>
<body onLoad="executeOnLoad()">
<script><!--

tabs = ["scm_tab", "general_tab", "tracker_tab"]

function showTab(id) {
	for(tab in tabs) {
		tab = tabs[tab]
		style = "none"
		if(id == tab) {
			style = "block"
		}
		document.getElementById(tab).style.display = style
	}
}

function executeOnLoad() {  
  <% scm_configurators.each do |scm_configurator| %>
    <%= scm_configurator.javascript_on_load %>
  <% end %>
}

scmconfigurators = [
<% scm_configurators.each do |scm_configurator| %>
	"<%=scm_configurator.scm_id %>",
<% end %> "" ];

function showScm(scm) {
	for (i=0;i<scmconfigurators.length-1;i++) {
		oldTrackerDiv = document.getElementById(scmconfigurators[i]);
		oldTrackerDiv.style.display = 'none'
	}
  newTrackerDiv = document.getElementById(scm);
  newTrackerDiv.style.display = 'block';
}

trackingconfigurators = [
<% tracking_configurators.each do |tracking_configurator| %>
	"<%=tracking_configurator.tracking_id %>",
<% end %> "" ];

function showTracker(tracker) {
	for (i=0;i<trackingconfigurators.length-1;i++) {
		oldTrackerDiv = document.getElementById(trackingconfigurators[i]);
		oldTrackerDiv.style.display = 'none'
	}
  newTrackerDiv = document.getElementById(tracker);
  newTrackerDiv.style.display = 'block';
}

function configureAction() {
	if (window.location.href.indexOf("/configure/")!=-1) {
		document.forms[0].action=document.forms[0].elements[0].value;
	} else {
		document.forms[0].action="configure/" + document.forms[0].elements[0].value;
	}
}


<% scm_configurators.each do |scm_configurator| %>
  <%= scm_configurator.javascript_declarations %>
<% end %>

// -->
</script>

<ul id="foldertab">
    <li><a href="javascript:showTab('general_tab')"><img src="smallicons/wrench.png"> General</a></li>
    <li><a href="javascript:showTab('scm_tab')"><img src="smallicons/safe.png"> Source Control</a></li>
    <li><a href="javascript:showTab('tracker_tab')"><img src="smallicons/scroll_information.png"> Issue Tracker</a></li>
</ul>

<form onsubmit="configureAction();" id="configform">

<div id="general_tab" style="display:block">
<table width="100%">
<tr>
  <td class="setting-name">Project name</td>
  <td width="75%">
    <% if nil %>
      <%= project_name %>
      <input name="project_name" type="hidden" value="<%= project_name %>"/>
    <% else %>
      <input class="setting-input" name="project_name" type="text" value="<%= project_name %>"/>
    <% end %>
  </td>
</tr>
<tr>
  <% 
    require 'cgi'
    build_command_line_attrib_value = project_config['build_command_line'] ? CGI.escapeHTML(project_config['build_command_line']) : ""
  %>
  <td class="setting-name">Build command</td>
  <td><input class="setting-input" name="build_command_line" type="text" value="<%= build_command_line_attrib_value %>"/></td>
</tr>
<tr>
</tr>
<tr>
  <td class="setting-name">Nag email</td>
  <td><input class="setting-input" name="nag_email" id="nag_email" type="text" value="<%= project_config['nag_email'] %>"/></td>
</tr>
<tr>
  <td>&nbsp;</td>
  <td class="setting-description">
    Several email addresses can be specified here, separated by a comma or a space charatcter.
  </td>
</tr>
<tr>
  <td>Project home page</td>
  <td><input class="setting-input" name="home_page" id="home_page" type="text" value="<%= project_config['home_page'] %>"></td>
</tr>
<tr>
  <td>ViewCVS/Fisheye URL</td>
  <td><input class="setting-input" name="scm_web_url" id="scm_web_url" type="text" value="<%= project_config['scm_web_url'] %>"></td>
</tr>
<tr>
  <td>&nbsp;</td>
  <td class="setting-description">
    The url to the root of the project in ViewCVS or Fisheye. For example: <tt>http://svn.cargo.codehaus.org/cargo/trunk/</tt>.
  </td>
</tr>

<tr>
  <td class="setting-name">Next build number</td>
  <td><input class="setting-input" name="next_build_label" id="next_build_label" type="text" value="<%= project_name ? next_build_label : "" %>"/></td>
</tr>
<tr>
  <td>&nbsp;</td>
  <td class="setting-description">
    The number that the next build will have. If you already have a number of labelled builds before you can override this here.
    If your SCM supports native labels (such as Subversion's repository-wide revision numbers) - you can leave this field empty
    in order to let your builds get the label from the SCM.
  </td>
</tr>

<tr>
  <td class="setting-name">Child builds</td>
  <td><input class="setting-input" name="dependent_projects" id="dependent_projects" type="text" value="<%= dependent_projects %>"/></td>
</tr>
<% if circular_dependency != nil %>
<tr>
  <td>Warning</td>
  <td class="setting-warning">
    <%=circular_dependency %>
  </td>
</tr>
<% end %>
<tr>
  <td>&nbsp;</td>
  <td class="setting-description">
    Comma separated list of child projects, builds of these projects will be trigged after successful build of this project.
    See <a href="http://damagecontrol.codehaus.org/Build+dependencies">Build dependencies</a>
  </td>
</tr>

<tr>
  <td class="setting-name">XML log files</td>
  <td><input class="setting-input" name="logs_to_merge" id="logs_to_archive" type="text" value="<%= logs_to_merge %>"/></td>
</tr>
<tr>
  <td>&nbsp;</td>
  <td class="setting-description">
    XML log files that are generated by the build command. Can contain wildcards anywhere.
    For example: To see JUnit tests from Maven specify <tt>target/test-reports/*.xml</tt>, for multiple Maven modules <tt>*/target/test-reports/*.xml</tt>.
    See <a href="http://damagecontrol.codehaus.org/Viewing+build+results+from+build+tools">Viewing build results from build tools</a>
  </td>
</tr>

<tr>
  <td class="setting-name">Files to archive</td>
  <td><input class="setting-input" name="artifacts_to_archive" id="artifacts_to_archive" type="text" value="<%= artifacts_to_archive %>"/></td>
</tr>
<tr>
  <td>&nbsp;</td>
  <td class="setting-description">
    Specify comma-separated list of paths to files that DamageControl will archive after a build.
    Archived files are accessible from the build page. May contain wildcards.
  </td>
</tr>

<tr>
  <td class="setting-name">Polling</td>
  <td><input name="polling" id="polling" type="checkbox" <%= if project_config['polling'] then "checked=true" else "" end %> /></td>
</tr>
<tr>
  <td>&nbsp;</td>
  <td class="setting-description">
    Polling will at a specified interval check the SCM for changes. If there are any changes a build will be trigged.
    The polling interval is currently specified at the server level and can't be changed on a project level,
    this <a href="http://jira.codehaus.org/browse/DC-260">will be fixed in the future</a>.
  </td>
</tr>

<tr>
  <td class="setting-name">Fixed Time Scheduling</td>
  <td><input class="setting-input" name="fixed_build_time_hhmm" id="fixed_build_time_hhmm" type="text" value="<%= fixed_build_time_hhmm %>"/></td>
</tr>
<tr>
  <td>&nbsp;</td>
  <td class="setting-description">
    Fixed Time Scheduling will trigger a build at a specific time each day.  The time must be in the format HH:MM and should be specified according to UTC.
    For example, if your DC server is in Minneapolis and you want to trigger a build at 2:00 AM CST every morning, then you should specify 08:00.  Note that UTC does not adjust for Daylight Savings Time.
  </td>
</tr>
</table>
</div>

<div id="scm_tab" style="display:none">
<table width="100%">
<tr>
  <td>Source control</td>
  <td>
    <% scm_configurators.each do |scm_configurator| %>
      <input 
				id="<%= scm_configurator.scm_id %>radio" 
				type="radio" value="<%= scm_configurator.scm_id %>" 
				name="scm_id" onClick="javascript:showScm('<%= scm_configurator.scm_id %>')"<%if(scm_configurator.selected?)%>checked="true"<%end%>/> 
				<%= scm_configurator.scm_display_name %>
    <% end %>
  </td>
</tr>
</table>

  <% scm_configurators.each do |scm_configurator| %>
    <div id="<%= scm_configurator.scm_id %>" style="<% if(scm_configurator.selected?)%>display:block<%else%>display:none<%end%>">
      <%= scm_configurator.config_form %>
    </div>
  <% end %>
	
</div>

<div id="tracker_tab" style="display:none">
Issue tracking. By specifying an issue tracker, DamageControl will detect issue numbers/ids in developers' SCM commit messages
and create links to the issues on the changeset pages. This way people browsing the changesets for a build can easily navigate
to any issues related to the commits that went into the build.
<table width="100%">
<tr>
  <td>
    <% tracking_configurators.each do |tracking_configurator| %>
      <input 
				id="<%= tracking_configurator.tracking_id %>radio" 
				type="radio" value="<%= tracking_configurator.tracking_id %>" 
				name="tracking_id" 
				onClick="javascript:showTracker('<%= tracking_configurator.tracking_id %>')"<% if(tracking_configurator.selected?) %>checked="true"<%end%>/>
			<%= tracking_configurator.tracking_display_name %>
    <% end %>
  </td>
</tr>
</table>

  <% tracking_configurators.each do |tracking_configurator| %>
    <div id="<%= tracking_configurator.tracking_id %>" style="<% if(tracking_configurator.selected?)%>display:block<%else%>display:none<%end%>">
      <%= tracking_configurator.config_form %>
    </div>
  <% end %>
</div>

  <input name="action" type="hidden" value="<%= action %>" />
  <input type="submit" value="Save"/>
  
</form>
  
</body>
</html>
