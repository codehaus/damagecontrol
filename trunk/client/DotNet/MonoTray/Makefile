# This makefile is autogenerated by MonoDevelop
# Do not modify this file

SOURCES = \
./Main.cs \
./AssemblyInfo.cs \
./SettingsWindow.cs \
./ProjectWindow.cs \
./TrayIcon.cs \
./Settings.cs \
./ConnectionDialog.cs

RESOURCES = \
./gui.glade \
./egg-sharp.dll \
./libegg.so \
./gray-24.png \
./green-24.png \
./red-24.png

RESOURCES_BUILD = $(foreach res,$(RESOURCES), $(addprefix -resource:,$(res)),$(notdir $(res)))

PKG_REFERENCES = \
gtk-sharp \
glade-sharp \
gconf-sharp \
art-sharp

PKG_REFERENCES_BUILD = $(addprefix -pkg:, $(PKG_REFERENCES))

PKG_REFERENCES_CHECK = $(addsuffix .pkgcheck, $(PKG_REFERENCES))

SYSTEM_REFERENCES = \
System.Security.dll

SYSTEM_REFERENCES_BUILD = $(addprefix -r:, $(SYSTEM_REFERENCES))

SYSTEM_REFERENCES_CHECK = $(addsuffix .check, $(SYSTEM_REFERENCES))

ASSEMBLY_REFERENCES = \
"./egg-sharp.dll"

ASSEMBLY_REFERENCES_BUILD = $(addprefix -r:, $(ASSEMBLY_REFERENCES))

PROJECT_REFERENCES = \
"./DamageControlClientNet.dll" \
"./XmlRpcCs-mono.dll"

PROJECT_REFERENCES_BUILD = $(addprefix -r:, $(PROJECT_REFERENCES))

MCS_OPTIONS = 

all: MonoTray.exe

dist: DamageControl-MonoTray.tar.gz

DamageControl-MonoTray.tar.gz: DamageControl-MonoTray
	tar -zcvf DamageControl-MonoTray.tar.gz DamageControl-MonoTray

DamageControl-MonoTray: MonoTray.exe
	mkdir -p DamageControl-MonoTray
	cp MonoTray.exe XmlRpcCs-mono.dll DamageControlClientNet.dll egg-sharp.dll libegg.so DamageControl-MonoTray

makedeps:
	( cd ../XmlRpcCs ; make XmlRpcCs-mono.dll )
	( cd ../DamageControlClientNet ; make DamageControlClientNet.dll )

copydeps: makedeps
	cp ../XmlRpcCs/XmlRpcCs-mono.dll .
	cp ../DamageControlClientNet/DamageControlClientNet.dll .

MonoTray.exe: $(SOURCES) $(RESOURCES) copydeps
	mcs $(MCS_OPTIONS) -target:exe -out:"MonoTray.exe" $(RESOURCES_BUILD) $(PKG_REFERENCES_BUILD) $(ASSEMBLY_REFERENCES_BUILD) $(PROJECT_REFERENCES_BUILD) $(SYSTEM_REFERENCES_BUILD) $(SOURCES)

clean:
	rm -f MonoTray.exe XmlRpcCs-mono.dll DamageControlClientNet.dll DamageControl-MonoTray DamageControl-MonoTray.tar.gz

depcheck: PKG_depcheck SYSTEM_depcheck

PKG_depcheck: $(PKG_REFERENCES_CHECK)

%.pkgcheck:
	@echo -n Checking for package $(subst .pkgcheck,,$@)...
	@if pkg-config --libs $(subst .pkgcheck,,$@) &> /dev/null; then \
		echo yes; \
	else \
		echo no; \
		exit 1; \
	fi

SYSTEM_depcheck: $(SYSTEM_REFERENCES_CHECK)

%.check:
	@echo -n Checking for $(subst .check,,$@)...
	@if [ ! -e `pkg-config --variable=libdir mono`/mono/1.0/$(subst .check,,$@) ]; then \
		echo no; \
		exit 1; \
	else \
		echo yes; \
	fi
